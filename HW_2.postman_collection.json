{
	"info": {
		"_postman_id": "d6a0c6d5-b39d-4153-bca1-5c81d2a82358",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19689674"
	},
	"item": [
		{
			"name": "/first_EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3_EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let jsonData = pm.response.json();\r",
							"let user_name = jsonData.name\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(user_name).to.eql(\"Ivan\");\r",
							"});\r",
							"let user_age = jsonData.age\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(user_age).to.eql(\"39\");\r",
							"});\r",
							"let user_salary = jsonData.salary\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(user_salary).to.eql(490000);\r",
							"});\r",
							"let req = request.data\r",
							"pm.test(\"Name is body\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"pm.test(\"Age is body\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"pm.test(\"Salary is body\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+req.salary);\r",
							"});\r",
							"console.log(jsonData.family)\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(jsonData.salary*4);\r",
							"});\r",
							"console.log(jsonData.family.u_salary_1_5_year);\r",
							"console.log(jsonData.salary*4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Ivan",
							"type": "text"
						},
						{
							"key": "age",
							"value": "39",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "490000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005//user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"",
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3_EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.toObject()\r",
							"pm.test(\"Name is url\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"pm.test(\"Age is url\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"pm.test(\"Salary is url\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+req.salary);\r",
							"});\r",
							"console.log(jsonData.family);\r",
							"pm.test(\"Проверить, что у параметра dog есть параметры name\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Проверить, что у параметра dog есть параметры age\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"pm.test(\"Проверить, что параметр name имеет значение Luky.\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.be.oneOf([\"Luky\"]);\r",
							"});\r",
							"pm.test(\"Проверить, что параметр age имеет значение 4.\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.be.oneOf([4]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005 /object_info_3?name=Ivan&age=39&salary=490000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005 ",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ivan"
						},
						{
							"key": "age",
							"value": "39"
						},
						{
							"key": "salary",
							"value": "490000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4_EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.toObject()\r",
							"pm.test(\"Name is url\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"pm.test(\"Age is url\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(+req.age);\r",
							"});\r",
							"console.log(\"Вывести в консоль параметр salary из request.\", jsonData.salary);\r",
							"console.log(\"Вывести в консоль параметр salary из response.\", req.salary);\r",
							"let salary_0 = jsonData.salary[0];\r",
							"console.log(salary_0);\r",
							"let salary_1 = jsonData.salary[1];\r",
							"console.log(salary_1);\r",
							"let salary_2 = jsonData.salary[2];\r",
							"console.log(salary_2);\r",
							"pm.test(\"Salary_0\", function () {\r",
							"    pm.expect(salary_0).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"Salary_1\", function () {\r",
							"    pm.expect(+salary_1).to.eql(+req.salary*2);\r",
							"});\r",
							"pm.test(\"Salary_2\", function () {\r",
							"    pm.expect(+salary_2).to.eql(+req.salary*3);\r",
							"});\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"pm.environment.set(\"salary\", jsonData.salary[0]);\r",
							"for (i = 0; i < jsonData.salary.length; i++){\r",
							"    console.log(\"salary_cycle\", jsonData.salary[i]);\r",
							"    };\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005 /object_info_4?name=Ivan&age=39&salary=490000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005 ",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Ivan"
						},
						{
							"key": "age",
							"value": "39"
						},
						{
							"key": "salary",
							"value": "490000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2_EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let jsonData = pm.response.json();\r",
							"let req = request.data;\r",
							"pm.test(\"json response имеет параметр start_qa_salary\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"pm.test(\"json response имеет параметр qa_salary_after_6_months\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"pm.test(\"json response имеет параметр qa_salary_after_12_months\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"pm.test(\"json response имеет параметр qa_salary_after_1.5_year\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"pm.test(\"json response имеет параметр qa_salary_after_3.5_years\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"pm.test(\"json response имеет параметр person\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"pm.test(\"параметр start_qa_salary равен salary из request\", function() {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"параметр qa_salary_after_6_months равен salary*2 из request\", function() {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(+req.salary*2);\r",
							"});\r",
							"pm.test(\"параметр qa_salary_after_12_months равен salary*2.7 из request\", function(){\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(+req.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"параметр qa_salary_after_1.5_year равен salary*3.3 из request\", function() {\r",
							"    pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(+req.salary*3.3);\r",
							"});\r",
							"pm.test(\"параметр qa_salary_after_3.5_years равен salary*3.8 из request\", function() {\r",
							"    pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(+req.salary*3.8);\r",
							"});\r",
							"pm.test(\"в параметре person, 1-й элемент из u_name равен salary из request\", function() {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"параметр u_age равен age из request\", function() {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"pm.test(\"параметр u_salary_5_years равен salary*4.2 из request\", function() {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+req.salary*4.2);\r",
							"});\r",
							"for (let i in jsonData.person){\r",
							"    console.log(\"Property:\", i, \"property value:\", jsonData.person[i]);\r",
							"}\r",
							"for (let i in jsonData.person){\r",
							"    console.log(i, jsonData.person[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Ivan",
							"type": "text"
						},
						{
							"key": "age",
							"value": "39",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "490000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}